<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Windows.UI.Xaml.Hosting.HostingContract</name>
  </assembly>
  <members>
    <member name="T:Windows.UI.Xaml.Hosting.DesignerAppExitedEventArgs">
      <summary>DesignerAppManager.DesignerAppExited イベントのイベント データを取得します。</summary>
    </member>
    <member name="P:Windows.UI.Xaml.Hosting.DesignerAppExitedEventArgs.ExitCode">
      <summary>アプリが終了した終了コードを取得します。</summary>
      <returns>アプリが終了した終了コード。</returns>
    </member>
    <member name="T:Windows.UI.Xaml.Hosting.DesignerAppManager">
      <summary>XamlUIPresenter を使用し Win32 プロセスで実行されるレガシ デザイナーと比較して、通常の UWP コンテキストで実行される XAML デザイン サーフェイスでアプリケーションを管理します。 このプロセスでは、このモードで正常にアクティブにするために、.APPX に NoUIEntryPoints-DesignModeV2 DisplayName プロパティを指定する必要があります。 起動したアプリケーションは、タスク バーまたは TaskView スイッチャーに表示されません。</summary>
    </member>
    <member name="M:Windows.UI.Xaml.Hosting.DesignerAppManager.#ctor(System.String)">
      <summary>DesignerAppManager クラスの新しいインスタンスを初期化します。</summary>
      <param name="appUserModelId">アプリのユーザー モデルの識別子。</param>
    </member>
    <member name="P:Windows.UI.Xaml.Hosting.DesignerAppManager.AppUserModelId">
      <summary>アプリのユーザー モデルの識別子を取得します。</summary>
      <returns>アプリのユーザー モデルの識別子。</returns>
    </member>
    <member name="E:Windows.UI.Xaml.Hosting.DesignerAppManager.DesignerAppExited">
      <summary>デザイナーでアプリが終了したときに発生します。</summary>
    </member>
    <member name="M:Windows.UI.Xaml.Hosting.DesignerAppManager.Close">
      <summary>アプリ マネージャーを閉じます。 これにより、DesignerAppManager によってアクティブ化されたプロセスが閉じられ、プロセスが終了するのを待ちます。 プロセスが停止した場合、このメソッドは無制限にブロックする可能性があります。 DesignerAppExited は、手動で閉じられた時には起動**されません**。</summary>
    </member>
    <member name="M:Windows.UI.Xaml.Hosting.DesignerAppManager.CreateNewViewAsync(Windows.UI.Xaml.Hosting.DesignerAppViewState,Windows.Foundation.Size)">
      <summary>新しい DesignerAppView を作成します。</summary>
      <param name="initialViewState">ビューの初期状態。</param>
      <param name="initialViewSize">ビューの初期サイズ。</param>
      <returns>作成した DesignerAppView。</returns>
    </member>
    <member name="M:Windows.UI.Xaml.Hosting.DesignerAppManager.LoadObjectIntoAppAsync(System.String,System.Guid,System.String)">
      <summary>アプリに指定したオブジェクトを読み込みます。</summary>
      <param name="dllName">DLL の名前。</param>
      <param name="classId">このクラスの識別子。</param>
      <param name="initializationData">オブジェクトを初期化するデータ。</param>
      <returns>操作の非同期結果。 これを使用して非同期の呼び出しを完了させるタイミングを決定します。</returns>
    </member>
    <member name="T:Windows.UI.Xaml.Hosting.DesignerAppView">
      <summary>XAML デザイン サーフェイスにアプリ ビューを表します。</summary>
    </member>
    <member name="P:Windows.UI.Xaml.Hosting.DesignerAppView.ApplicationViewId">
      <summary>アプリ ビューの識別子を取得します。</summary>
      <returns>アプリ ビューの識別子。</returns>
    </member>
    <member name="P:Windows.UI.Xaml.Hosting.DesignerAppView.AppUserModelId">
      <summary>アプリのユーザー モデルの識別子を取得します。</summary>
      <returns>アプリのユーザー モデルの識別子。</returns>
    </member>
    <member name="P:Windows.UI.Xaml.Hosting.DesignerAppView.ViewSize">
      <summary>デザイナー内のアプリのビューのサイズを取得します。</summary>
      <returns>デザイナー内のアプリ ビューのサイズ。</returns>
    </member>
    <member name="P:Windows.UI.Xaml.Hosting.DesignerAppView.ViewState">
      <summary>ビューが可視状態にあるか、非表示の状態にあるかを示す値を取得します。</summary>
      <returns>ビューが **可視** 状態にあるか、**非表示** の状態にあるかを示す値。</returns>
    </member>
    <member name="M:Windows.UI.Xaml.Hosting.DesignerAppView.Close">
      <summary>デザイナー内のアプリ ビューを閉じます。</summary>
    </member>
    <member name="M:Windows.UI.Xaml.Hosting.DesignerAppView.UpdateViewAsync(Windows.UI.Xaml.Hosting.DesignerAppViewState,Windows.Foundation.Size)">
      <summary>デザイナー内のアプリ ビューを更新します。</summary>
      <param name="viewState">アプリ ビューの状態。</param>
      <param name="viewSize">アプリ ビューのサイズ。</param>
      <returns>操作の非同期結果。 これを使用して非同期の呼び出しを完了させるタイミングを決定します。</returns>
    </member>
    <member name="T:Windows.UI.Xaml.Hosting.DesignerAppViewState">
      <summary>アプリ ビューが可視状態にあるか、または非表示の状態にあるかを指定する定数を定義します。</summary>
    </member>
    <member name="F:Windows.UI.Xaml.Hosting.DesignerAppViewState.Hidden">
      <summary>アプリ ビューは非表示の状態にあります。</summary>
    </member>
    <member name="F:Windows.UI.Xaml.Hosting.DesignerAppViewState.Visible">
      <summary>アプリ ビューは可視状態にあります。</summary>
    </member>
    <member name="T:Windows.UI.Xaml.Hosting.DesktopWindowXamlSource">
      <summary>ウィンドウ ハンドル (HWND) に関連付けられている任意の UI 要素で UWP コントロールをホストする UWP 以外のデスクトップ アプリケーション (たとえば、WPF または Windows フォーム アプリケーション) を有効にします。</summary>
    </member>
    <member name="M:Windows.UI.Xaml.Hosting.DesktopWindowXamlSource.#ctor">
      <summary>DesktopWindowXamlSource クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Windows.UI.Xaml.Hosting.DesktopWindowXamlSource.Content">
      <summary>デスクトップ アプリケーションでホストする Windows.UI.Xaml.UIElement オブジェクトを取得または設定します。</summary>
      <returns>デスクトップ アプリケーションでホストするオブジェクト。</returns>
    </member>
    <member name="P:Windows.UI.Xaml.Hosting.DesktopWindowXamlSource.HasFocus">
      <summary>デスクトップ アプリケーションで DesktopWindowXamlSource に現在フォーカスがあるかどうかを示す値を取得します。</summary>
      <returns>デスクトップ アプリケーションで **DesktopWindowXamlSource** に現在フォーカスがある場合は true。それ以外は false。</returns>
    </member>
    <member name="E:Windows.UI.Xaml.Hosting.DesktopWindowXamlSource.GotFocus">
      <summary>DesktopWindowXamlSource がデスクトップ アプリケーションでフォーカスを取得する際 (たとえば、**DesktopWindowXamlSource** の直前にある要素にフォーカス中に、ユーザーが **Tab** キーを押すなど) に発生します。</summary>
    </member>
    <member name="E:Windows.UI.Xaml.Hosting.DesktopWindowXamlSource.TakeFocusRequested">
      <summary>ホストのデスクトップ アプリケーションが、DesktopWindowXamlSource オブジェクトからのフォーカスを取り戻す要求を受け取った際 (たとえば、ユーザーが **DesktopWindowXamlSource** でフォーカス可能な最後の要素にあって、**Tab** キーを押すなど) に発生します。</summary>
    </member>
    <member name="M:Windows.UI.Xaml.Hosting.DesktopWindowXamlSource.Close">
      <summary>この DesktopWindowXamlSource で使用されているリソースを閉じて解放します。</summary>
    </member>
    <member name="M:Windows.UI.Xaml.Hosting.DesktopWindowXamlSource.NavigateFocus(Windows.UI.Xaml.Hosting.XamlSourceFocusNavigationRequest)">
      <summary>デスクトップ アプリケーションで、DesktopWindowXamlSource に、プログラムでフォーカスを設定します。</summary>
      <param name="request">原因とフォーカス ナビゲーションのその他のオプション情報を指定するオブジェクト。</param>
      <returns>フォーカス ナビゲーションの要求データを提供するオブジェクト。</returns>
    </member>
    <member name="T:Windows.UI.Xaml.Hosting.DesktopWindowXamlSourceGotFocusEventArgs">
      <summary>GotFocus イベント用のイベント データを提供します。</summary>
    </member>
    <member name="P:Windows.UI.Xaml.Hosting.DesktopWindowXamlSourceGotFocusEventArgs.Request">
      <summary>原因とフォーカス ナビゲーションのその他の情報を指定する、XamlSourceFocusNavigationRequest オブジェクトを取得します。</summary>
      <returns>原因とフォーカス ナビゲーションのその他の情報を指定するオブジェクト。</returns>
    </member>
    <member name="T:Windows.UI.Xaml.Hosting.DesktopWindowXamlSourceTakeFocusRequestedEventArgs">
      <summary>TakeFocusRequested イベント用のイベント データを提供します。</summary>
    </member>
    <member name="P:Windows.UI.Xaml.Hosting.DesktopWindowXamlSourceTakeFocusRequestedEventArgs.Request">
      <summary>原因とフォーカス ナビゲーションのその他の情報を指定する、XamlSourceFocusNavigationRequest オブジェクトを取得します。</summary>
      <returns>原因とフォーカス ナビゲーションのその他の情報を指定するオブジェクト。</returns>
    </member>
    <member name="T:Windows.UI.Xaml.Hosting.HostingContract">
      <summary>
      </summary>
    </member>
    <member name="T:Windows.UI.Xaml.Hosting.IXamlUIPresenterHost">
      <summary>アプリケーションのリソースを解決するサービスを表します。 このインターフェイスはシナリオをホストするデザイン ツールで使用され、通常使用するためのものではありません。</summary>
    </member>
    <member name="M:Windows.UI.Xaml.Hosting.IXamlUIPresenterHost.ResolveFileResource(System.String)">
      <summary>パスで指定されたリソースを解決し、文字列のファイル名を返します。</summary>
      <param name="path">解決するローカル パス。</param>
      <returns>解決されたファイル名。</returns>
    </member>
    <member name="T:Windows.UI.Xaml.Hosting.IXamlUIPresenterHost2">
      <summary>IXamlUIPresenterHost を拡張して GetGenericXamlFilePath を追加します。</summary>
    </member>
    <member name="M:Windows.UI.Xaml.Hosting.IXamlUIPresenterHost2.GetGenericXamlFilePath">
      <summary>デザイン時に代替 generic.xaml ファイルをプレゼンター ホストに読み込みます。</summary>
      <returns>代替の generic.xaml ファイルの場所へのローカル パス。</returns>
    </member>
    <member name="T:Windows.UI.Xaml.Hosting.IXamlUIPresenterHost3">
      <summary>IXamlUIPresenterHost を拡張して ResolveDictionaryResource を追加します。</summary>
    </member>
    <member name="M:Windows.UI.Xaml.Hosting.IXamlUIPresenterHost3.ResolveDictionaryResource(Windows.UI.Xaml.ResourceDictionary,System.Object,System.Object)">
      <summary>ディクショナリとキーによって指定されたリソースを解決します。</summary>
      <param name="dictionary">リソースを含むディクショナリ。</param>
      <param name="dictionaryKey">リソース キー。</param>
      <param name="suggestedValue">推奨値。</param>
      <returns>リソース オブジェクト。</returns>
    </member>
    <member name="T:Windows.UI.Xaml.Hosting.WindowsXamlManager">
      <summary>UWP コントロールをホストする UWP 以外のデスクトップ アプリケーション (たとえば、WPF または Windows フォーム アプリケーション) の UWP XAML フレームワークを表します。</summary>
    </member>
    <member name="M:Windows.UI.Xaml.Hosting.WindowsXamlManager.Close">
      <summary>この WindowsXamlManager で使用されているリソースを閉じて解放します。</summary>
    </member>
    <member name="M:Windows.UI.Xaml.Hosting.WindowsXamlManager.InitializeForCurrentThread">
      <summary>現在のスレッドの UWP 以外のデスクトップ アプリケーション (たとえば、WPF または Windows フォーム アプリケーション) の UWP XAML フレームワークを初期化します。</summary>
      <returns>UWP XAML フレームワークへの参照を格納するオブジェクト。</returns>
    </member>
    <member name="T:Windows.UI.Xaml.Hosting.XamlSourceFocusNavigationReason">
      <summary>Windows.UI.Xaml.UIElement が、XAML ベースの UI をホストするために DesktopWindowXamlSource オブジェクトを使用するデスクトップ アプリケーションで、フォーカスを取得した原因を表す値を定義します。 XamlSourceFocusNavigationRequest.Reason プロパティは、これらの値のいずれかを返します。</summary>
    </member>
    <member name="F:Windows.UI.Xaml.Hosting.XamlSourceFocusNavigationReason.Down">
      <summary>ユーザーが 4 方向のナビゲーション エクスペリエンス (たとえば、キーボードの方向キー) を使用して下に移動することへの応答として、フォーカスが設定されました。</summary>
    </member>
    <member name="F:Windows.UI.Xaml.Hosting.XamlSourceFocusNavigationReason.First">
      <summary>ユーザーが双方向のナビゲーション エクスペリエンスを使用して (たとえば、**Tab** キーを押すことで) 次の要素に移動することへの応答として、フォーカスが設定されました。</summary>
    </member>
    <member name="F:Windows.UI.Xaml.Hosting.XamlSourceFocusNavigationReason.Last">
      <summary>ユーザーが双方向のナビゲーション エクスペリエンスを使用して (たとえば、**Shift-Tab** キーを押すことで) 前の要素に移動することへの応答として、フォーカスが設定されました。</summary>
    </member>
    <member name="F:Windows.UI.Xaml.Hosting.XamlSourceFocusNavigationReason.Left">
      <summary>ユーザーが 4 方向のナビゲーション エクスペリエンス (たとえば、キーボードの方向キー) を使用して左に移動することへの応答として、フォーカスが設定されました。</summary>
    </member>
    <member name="F:Windows.UI.Xaml.Hosting.XamlSourceFocusNavigationReason.Programmatic">
      <summary>フォーカスがプログラムにより設定されました。</summary>
    </member>
    <member name="F:Windows.UI.Xaml.Hosting.XamlSourceFocusNavigationReason.Restore">
      <summary>**Alt** + **Tab** キーを押すなどして、タスク スイッチをした後、フォーカスが復元されました。</summary>
    </member>
    <member name="F:Windows.UI.Xaml.Hosting.XamlSourceFocusNavigationReason.Right">
      <summary>ユーザーが 4 方向のナビゲーション エクスペリエンス (たとえば、キーボードの方向キー) を使用して右に移動することへの応答として、フォーカスが設定されました。</summary>
    </member>
    <member name="F:Windows.UI.Xaml.Hosting.XamlSourceFocusNavigationReason.Up">
      <summary>ユーザーが 4 方向のナビゲーション エクスペリエンス (たとえば、キーボードの方向キー) を使用して上に移動することへの応答として、フォーカスが設定されました。</summary>
    </member>
    <member name="T:Windows.UI.Xaml.Hosting.XamlSourceFocusNavigationRequest">
      <summary>DesktopWindowXamlSource オブジェクトにフォーカスを設定する要求に関する情報を提供します。</summary>
    </member>
    <member name="M:Windows.UI.Xaml.Hosting.XamlSourceFocusNavigationRequest.#ctor(Windows.UI.Xaml.Hosting.XamlSourceFocusNavigationReason)">
      <summary>ナビゲーションの要求に対する理由で、XamlSourceFocusNavigationRequest クラスの新しいインスタンスを初期化します。</summary>
      <param name="reason">ナビゲーションの要求に対する理由を示す値。</param>
    </member>
    <member name="M:Windows.UI.Xaml.Hosting.XamlSourceFocusNavigationRequest.#ctor(Windows.UI.Xaml.Hosting.XamlSourceFocusNavigationReason,Windows.Foundation.Rect)">
      <summary>ナビゲーションの要求に対する理由および、ナビゲーションにフォーカスを受け取る外接する四角形で、XamlSourceFocusNavigationRequest クラスの新しいインスタンスを初期化します。</summary>
      <param name="reason">ナビゲーションの要求に対する理由を示す値。</param>
      <param name="hintRect">フォーカスを失ったデスクトップ アプリケーションの要素 (すなわち、DesktopWindowXamlSource がフォーカスを受信する前にはフォーカスのあった要素) に外接する四角形。 このパラメーターを使用することで、ユーザーが 4 方向のナビゲーション エクスペリエンス (たとえば、キーボードの方向キー) を使用して **DesktopWindowXamlSource** を入力する際に、UWP の XAML フレームワークにコンテキストが提供されます。 詳しくは、解説をご覧ください。</param>
    </member>
    <member name="M:Windows.UI.Xaml.Hosting.XamlSourceFocusNavigationRequest.#ctor(Windows.UI.Xaml.Hosting.XamlSourceFocusNavigationReason,Windows.Foundation.Rect,System.Guid)">
      <summary>ナビゲーションの要求、ナビゲーションにフォーカスを受け取る外接する四角形、および要求への一意の関連付け ID に対する理由で、XamlSourceFocusNavigationRequest クラスの新しいインスタンスを初期化します。</summary>
      <param name="reason">ナビゲーションの要求に対する理由を示す値。</param>
      <param name="hintRect">フォーカスを失ったデスクトップ アプリケーションの要素 (すなわち、DesktopWindowXamlSource がフォーカスを受信する前にはフォーカスのあった要素) に外接する四角形。 このパラメーターを使用することで、ユーザーが 4 方向のナビゲーション エクスペリエンス (たとえば、キーボードの方向キー) を使用して **DesktopWindowXamlSource** を入力する際に、UWP の XAML フレームワークにコンテキストが提供されます。 詳しくは、解説をご覧ください。</param>
      <param name="correlationId">ナビゲーション要求の一意の識別子。 このパラメーターは、記録をしたいときや、進行しているフォーカスの移動に既存の関連付け ID がある場合、そしてそのフォーカスを移動させて現在のナビゲーション要求に接続したい場合に、使用することができます。</param>
    </member>
    <member name="P:Windows.UI.Xaml.Hosting.XamlSourceFocusNavigationRequest.CorrelationId">
      <summary>ナビゲーション要求の一意の識別子を取得します。 この値は、記録をしたいときや、進行しているフォーカスの移動に既存の関連付け ID がある場合、そしてそのフォーカスを移動させて新しいナビゲーション要求に接続したい場合に、使用することができます。</summary>
      <returns>ナビゲーション要求の一意の識別子。</returns>
    </member>
    <member name="P:Windows.UI.Xaml.Hosting.XamlSourceFocusNavigationRequest.HintRect">
      <summary>フォーカスを失ったデスクトップ アプリケーションの要素 (すなわち、DesktopWindowXamlSource がフォーカスを受信する前にはフォーカスのあった要素) に外接する四角形を取得します。</summary>
      <returns>フォーカスを失った外接する四角形。</returns>
    </member>
    <member name="P:Windows.UI.Xaml.Hosting.XamlSourceFocusNavigationRequest.Reason">
      <summary>ナビゲーション要求の理由を示す、XamlSourceFocusNavigationReason 値を取得します。</summary>
      <returns>ナビゲーションの要求に対する理由を示す値。</returns>
    </member>
    <member name="T:Windows.UI.Xaml.Hosting.XamlSourceFocusNavigationResult">
      <summary>NavigateFocus メソッドを使用して DesktopWindowXamlSource オブジェクトにフォーカスを移動するための要求のデータを提供します。</summary>
    </member>
    <member name="M:Windows.UI.Xaml.Hosting.XamlSourceFocusNavigationResult.#ctor(System.Boolean)">
      <summary>XamlSourceFocusNavigationResult クラスの新しいインスタンスを初期化します。</summary>
      <param name="focusMoved">フォーカスが DesktopWindowXamlSource オブジェクトに正常に移動した場合は true。それ以外の場合は false。</param>
    </member>
    <member name="P:Windows.UI.Xaml.Hosting.XamlSourceFocusNavigationResult.WasFocusMoved">
      <summary>フォーカスが DesktopWindowXamlSource オブジェクトに正常に移動したかどうかを示す値を取得します。</summary>
      <returns>フォーカスが DesktopWindowXamlSource オブジェクトに正常に移動した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="T:Windows.UI.Xaml.Hosting.XamlUIPresenter">
      <summary>マイクロソフト Direct3D サーフェスでのビジュアル ツリーの表示を有効にします。 この型はシナリオをホストするデザイン ツールで使用され、通常使用するためのものではありません。</summary>
    </member>
    <member name="P:Windows.UI.Xaml.Hosting.XamlUIPresenter.CompleteTimelinesAutomatically">
      <summary>ホストが常にタイムラインを終わりまで実行するかどうかを決定する値を取得または設定します。</summary>
      <returns>常にタイムラインを終わりまで実行するなら **true**。 それ以外の場合は **false**。</returns>
    </member>
    <member name="P:Windows.UI.Xaml.Hosting.XamlUIPresenter.RootElement">
      <summary>サーフェイスに描画するルート ビジュアル要素を取得または設定します。</summary>
      <returns>描画する要素。</returns>
    </member>
    <member name="P:Windows.UI.Xaml.Hosting.XamlUIPresenter.ThemeKey">
      <summary>ThemeResourcesXaml から使用するように設定されたテーマを識別する文字列キーを取得または設定します。</summary>
      <returns>文字列キー。</returns>
    </member>
    <member name="P:Windows.UI.Xaml.Hosting.XamlUIPresenter.ThemeResourcesXaml">
      <summary>リソース ディクショナリを指定する XAML を取得または設定します。 リソース ディクショナリは、ホストが解決し、コンテンツに適用されるテーマを含んでいます。</summary>
      <returns>文字列形式で指定される XAML リソース ディクショナリ。</returns>
    </member>
    <member name="M:Windows.UI.Xaml.Hosting.XamlUIPresenter.GetFlyoutPlacement(Windows.Foundation.Rect,Windows.Foundation.Size,Windows.Foundation.Size,Windows.Foundation.Rect,Windows.UI.Xaml.Controls.Primitives.FlyoutPlacementMode,System.Boolean,Windows.UI.Xaml.Controls.Primitives.FlyoutPlacementMode@)">
      <summary>配置ターゲットとフライアウトを表示するコントロールの推奨サイズを使用して、FlyoutBase 配置ロジックを呼び出します。 配置ロジックを実行した結果となる境界を返します。</summary>
      <param name="placementTargetBounds">FlyoutBase プレゼンター ロジックに渡される配置ターゲット要素の境界。</param>
      <param name="controlSize">フライアウトを表示するコントロールの指定されたサイズ。</param>
      <param name="minControlSize">フライアウトを表示するコントロールの最小サイズ。</param>
      <param name="containerRect">配置ターゲットとフライアウトを保持する必要がある領域の境界。</param>
      <param name="targetPreferredPlacement">FlyoutBase 配置ロジックで使用する指定された配置モード。</param>
      <param name="allowFallbacks">フォールバックが配置モードに使用できる場合は **true**。 フォールバックを使用できない場合は **false**。</param>
      <param name="chosenPlacement">呼び出された FlyoutBase 配置ロジックによって使用される実際の配置モード。</param>
      <returns>FlyoutBase 配置ロジックによって計算された境界。</returns>
    </member>
    <member name="M:Windows.UI.Xaml.Hosting.XamlUIPresenter.GetFlyoutPlacementTargetInfo(Windows.UI.Xaml.FrameworkElement,Windows.UI.Xaml.Controls.Primitives.FlyoutPlacementMode,Windows.UI.Xaml.Controls.Primitives.FlyoutPlacementMode@,System.Boolean@)">
      <summary>ホストにおいてフライアウトも表示するための配置ターゲットの計算された境界を返します。 追加の **out** パラメーターは、境界の計算方法の詳細を提供します。</summary>
      <param name="placementTarget">フライアウトが相対的に配置される、配置ターゲット要素。</param>
      <param name="preferredPlacement">ターゲットに対するフライアウトの、ホストによる優先配置を宣言する列挙値。 </param>
      <param name="targetPreferredPlacement">フライアウトの優先配置を宣言する列挙値。</param>
      <param name="allowFallbacks">フライアウト配置ロジックでフォールバック配置が許可されている場合は **true**。 *targetPreferredPlacement* 値だけが考慮される場合は **false**。</param>
      <returns>計算された配置ターゲットの境界。</returns>
    </member>
    <member name="M:Windows.UI.Xaml.Hosting.XamlUIPresenter.NotifyWindowSizeChanged">
      <summary>Window.Current で SizeChanged イベントを呼び出します。 ホストの設定からユーザー コードへのサイズ変更を反映するためにホストによって使用され、それによってデザイン モードの操作をランタイムの操作と区別できるようになります。</summary>
    </member>
    <member name="M:Windows.UI.Xaml.Hosting.XamlUIPresenter.Present">
      <summary>ホストへの同期呼び出しとしてサーフェイスを提示します。</summary>
    </member>
    <member name="M:Windows.UI.Xaml.Hosting.XamlUIPresenter.Render">
      <summary>サーフェイスに描画します。 タイマーを使った非同期の呼び出しを対象としています。</summary>
    </member>
    <member name="M:Windows.UI.Xaml.Hosting.XamlUIPresenter.SetHost(Windows.UI.Xaml.Hosting.IXamlUIPresenterHost)">
      <summary>アプリケーション リソースの解決に使用する IXamlUIPresenterHost サービスの実装を指定します。</summary>
      <param name="host">サービス実装。</param>
    </member>
    <member name="M:Windows.UI.Xaml.Hosting.XamlUIPresenter.SetSize(System.Int32,System.Int32)">
      <summary>サーフェイスの幅と高さを指定します。</summary>
      <param name="width">幅 (ピクセル単位)。</param>
      <param name="height">高さ (ピクセル単位)。</param>
    </member>
  </members>
</doc>