<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Windows.UI.Xaml.Hosting.HostingContract</name>
  </assembly>
  <members>
    <member name="T:Windows.UI.Xaml.Hosting.DesignerAppExitedEventArgs">
      <summary>提供事件資料用於 DesignerAppManager.DesignerAppExited 事件。</summary>
    </member>
    <member name="P:Windows.UI.Xaml.Hosting.DesignerAppExitedEventArgs.ExitCode">
      <summary>取得應用程式結束的結束代碼。</summary>
      <returns>應用程式結束的結束代碼。</returns>
    </member>
    <member name="T:Windows.UI.Xaml.Hosting.DesignerAppManager">
      <summary>在執行於一般 UWP 內容中的 XAML Design Surface 內管理應用程式，相較於舊版設計工具，後者使用 XamlUIPresenter 並在 Win32 處理程序中執行。 需要此程序才能在 .APPX 中指定 NoUIEntryPoints-DesignModeV2 DisplayName 屬性，以便在此模式下成功啟動。 啟動的應用程式不會顯示在工作列或 TaskView 切換器中。</summary>
    </member>
    <member name="M:Windows.UI.Xaml.Hosting.DesignerAppManager.#ctor(System.String)">
      <summary>初始化 DesignerAppManager 類別的新執行個體。</summary>
      <param name="appUserModelId">應用程式使用者模型的識別項。</param>
    </member>
    <member name="P:Windows.UI.Xaml.Hosting.DesignerAppManager.AppUserModelId">
      <summary>取得應用程式使用者模型的識別項。</summary>
      <returns>應用程式使用者模型的識別項。</returns>
    </member>
    <member name="E:Windows.UI.Xaml.Hosting.DesignerAppManager.DesignerAppExited">
      <summary>發生在設計工具中的應用程式已結束時。</summary>
    </member>
    <member name="M:Windows.UI.Xaml.Hosting.DesignerAppManager.Close">
      <summary>關閉應用程式管理員。 這將會關閉由 DesignerAppManager 啟動的處理程序並等待處理程序終止。 如果處理程序當掉，這個方法可能會無限期封鎖。 手動關閉時**不會**發生 DesignerAppExited 事件。</summary>
    </member>
    <member name="M:Windows.UI.Xaml.Hosting.DesignerAppManager.CreateNewViewAsync(Windows.UI.Xaml.Hosting.DesignerAppViewState,Windows.Foundation.Size)">
      <summary>建立新的 DesignerAppView。</summary>
      <param name="initialViewState">檢視的初始狀態。</param>
      <param name="initialViewSize">檢視的初始大小。</param>
      <returns>建立的 DesignerAppView。</returns>
    </member>
    <member name="M:Windows.UI.Xaml.Hosting.DesignerAppManager.LoadObjectIntoAppAsync(System.String,System.Guid,System.String)">
      <summary>將指定的物件載入應用程式中。</summary>
      <param name="dllName">DLL 的名稱。</param>
      <param name="classId">類別的識別碼。</param>
      <param name="initializationData">初始化物件的資料。</param>
      <returns>作業的非同步結果。 使用它來判斷何時完成非同步呼叫。</returns>
    </member>
    <member name="T:Windows.UI.Xaml.Hosting.DesignerAppView">
      <summary>代表 XAML Design Surface 中的應用程式檢視。</summary>
    </member>
    <member name="P:Windows.UI.Xaml.Hosting.DesignerAppView.ApplicationViewId">
      <summary>取得應用程式檢視的識別碼。</summary>
      <returns>應用程式檢視的識別碼。</returns>
    </member>
    <member name="P:Windows.UI.Xaml.Hosting.DesignerAppView.AppUserModelId">
      <summary>取得應用程式使用者模型的識別項。</summary>
      <returns>應用程式使用者模型的識別項。</returns>
    </member>
    <member name="P:Windows.UI.Xaml.Hosting.DesignerAppView.ViewSize">
      <summary>取得設計工具中應用程式檢視的大小。</summary>
      <returns>設計工具中應用程式檢視的大小。</returns>
    </member>
    <member name="P:Windows.UI.Xaml.Hosting.DesignerAppView.ViewState">
      <summary>取得值，這個值表示檢視是否可見或隱藏。</summary>
      <returns>值，這個值表示檢視是**可見**或**隱藏**。</returns>
    </member>
    <member name="M:Windows.UI.Xaml.Hosting.DesignerAppView.Close">
      <summary>關閉設計工具中的應用程式檢視。</summary>
    </member>
    <member name="M:Windows.UI.Xaml.Hosting.DesignerAppView.UpdateViewAsync(Windows.UI.Xaml.Hosting.DesignerAppViewState,Windows.Foundation.Size)">
      <summary>更新設計工具中的應用程式檢視。</summary>
      <param name="viewState">應用程式檢視的狀態。</param>
      <param name="viewSize">應用程式檢視的大小。</param>
      <returns>作業的非同步結果。 使用它來判斷何時完成非同步呼叫。</returns>
    </member>
    <member name="T:Windows.UI.Xaml.Hosting.DesignerAppViewState">
      <summary>定義常數，指定應用程式檢視是否可見或隱藏。</summary>
    </member>
    <member name="F:Windows.UI.Xaml.Hosting.DesignerAppViewState.Hidden">
      <summary>應用程式檢視隱藏。</summary>
    </member>
    <member name="F:Windows.UI.Xaml.Hosting.DesignerAppViewState.Visible">
      <summary>應用程式檢視可見。</summary>
    </member>
    <member name="T:Windows.UI.Xaml.Hosting.DesktopWindowXamlSource">
      <summary>可讓非 UWP 傳統型應用程式（例如，WPF 或 Windows Forms 應用程式）在與視窗控制代碼關聯的 UI 元素 (HWND) 中裝載 UWP 控制項。</summary>
    </member>
    <member name="M:Windows.UI.Xaml.Hosting.DesktopWindowXamlSource.#ctor">
      <summary>初始化 DesktopWindowXamlSource 類別的新執行個體。</summary>
    </member>
    <member name="P:Windows.UI.Xaml.Hosting.DesktopWindowXamlSource.Content">
      <summary>取得或設定您想要裝載在傳統型應用程式中的 Windows.UI.Xaml.UIElement 物件。</summary>
      <returns>您想要裝載在傳統型應用程式中的物件。</returns>
    </member>
    <member name="P:Windows.UI.Xaml.Hosting.DesktopWindowXamlSource.HasFocus">
      <summary>取得值，指出 DesktopWindowXamlSource 目前是否在傳統型應用程式中具有焦點。</summary>
      <returns>如果 **DesktopWindowXamlSource** 目前在傳統型應用程式中具有焦點則為 True，否則為 false。</returns>
    </member>
    <member name="E:Windows.UI.Xaml.Hosting.DesktopWindowXamlSource.GotFocus">
      <summary>發生於 DesktopWindowXamlSource 在傳統型應用程式中取得焦點 (例如當焦點剛好在 **DesktopWindowXamlSource** 前面的元素上時，使用者按下 **Tab** 按鍵)。</summary>
    </member>
    <member name="E:Windows.UI.Xaml.Hosting.DesktopWindowXamlSource.TakeFocusRequested">
      <summary>發生於主機傳統型應用程式從 DesktopWindowXamlSource 物件收到回收焦點的要求 (例如，使用者位在 **DesktopWindowXamlSource** 中最後一個可設定焦點元素且按下 **Tab**)。</summary>
    </member>
    <member name="M:Windows.UI.Xaml.Hosting.DesktopWindowXamlSource.Close">
      <summary>關閉並釋放這個 DesktopWindowXamlSource 使用的所有資源。</summary>
    </member>
    <member name="M:Windows.UI.Xaml.Hosting.DesktopWindowXamlSource.NavigateFocus(Windows.UI.Xaml.Hosting.XamlSourceFocusNavigationRequest)">
      <summary>嘗試以程式設計方式在傳統型應用程式中提供焦點給 DesktopWindowXamlSource。</summary>
      <param name="request">指定焦點瀏覽之原因及其他選用資訊的物件。</param>
      <returns>提供焦點瀏覽要求之資料的物件。</returns>
    </member>
    <member name="T:Windows.UI.Xaml.Hosting.DesktopWindowXamlSourceGotFocusEventArgs">
      <summary>提供事件資料用於 GotFocus 事件。</summary>
    </member>
    <member name="P:Windows.UI.Xaml.Hosting.DesktopWindowXamlSourceGotFocusEventArgs.Request">
      <summary>取得 XamlSourceFocusNavigationRequest 物件，指定焦點瀏覽之原因及其他選用資訊。</summary>
      <returns>指定焦點瀏覽之原因及其他資訊的物件。</returns>
    </member>
    <member name="T:Windows.UI.Xaml.Hosting.DesktopWindowXamlSourceTakeFocusRequestedEventArgs">
      <summary>提供事件資料用於 TakeFocusRequested 事件。</summary>
    </member>
    <member name="P:Windows.UI.Xaml.Hosting.DesktopWindowXamlSourceTakeFocusRequestedEventArgs.Request">
      <summary>取得 XamlSourceFocusNavigationRequest 物件，指定焦點瀏覽之原因及其他選用資訊。</summary>
      <returns>指定焦點瀏覽之原因及其他資訊的物件。</returns>
    </member>
    <member name="T:Windows.UI.Xaml.Hosting.HostingContract">
      <summary>
      </summary>
    </member>
    <member name="T:Windows.UI.Xaml.Hosting.IXamlUIPresenterHost">
      <summary>代表服務，可以解析來自應用程式的資源。 這個介面是用於設計工具裝載案例，而不是供一般用途使用。</summary>
    </member>
    <member name="M:Windows.UI.Xaml.Hosting.IXamlUIPresenterHost.ResolveFileResource(System.String)">
      <summary>會解析路徑所指定的資源，並傳回字串檔名。</summary>
      <param name="path">要解析的本機路徑。</param>
      <returns>解析的檔案名稱。</returns>
    </member>
    <member name="T:Windows.UI.Xaml.Hosting.IXamlUIPresenterHost2">
      <summary>延伸 IXamlUIPresenterHost 以加入 GetGenericXamlFilePath。</summary>
    </member>
    <member name="M:Windows.UI.Xaml.Hosting.IXamlUIPresenterHost2.GetGenericXamlFilePath">
      <summary>在設計階段將其他 generic.xaml 檔案載入展示器主機。</summary>
      <returns>可供選擇之 generic.xaml 檔案的位置的本機路徑。</returns>
    </member>
    <member name="T:Windows.UI.Xaml.Hosting.IXamlUIPresenterHost3">
      <summary>延伸 IXamlUIPresenterHost 以加入 ResolveDictionaryResource。</summary>
    </member>
    <member name="M:Windows.UI.Xaml.Hosting.IXamlUIPresenterHost3.ResolveDictionaryResource(Windows.UI.Xaml.ResourceDictionary,System.Object,System.Object)">
      <summary>解析字典和索引鍵所指定的資源。</summary>
      <param name="dictionary">包含資源的字典。</param>
      <param name="dictionaryKey">資源索引鍵。</param>
      <param name="suggestedValue">建議的值。</param>
      <returns>資源物件。</returns>
    </member>
    <member name="T:Windows.UI.Xaml.Hosting.WindowsXamlManager">
      <summary>代表裝載 UWP 控制項的非 UWP 傳統型應用程式 (例如，WPF 或 Windows Forms 應用程式) 上的 UWP XAML 架構。</summary>
    </member>
    <member name="M:Windows.UI.Xaml.Hosting.WindowsXamlManager.Close">
      <summary>關閉並釋放這個 WindowsXamlManager 使用的所有資源。</summary>
    </member>
    <member name="M:Windows.UI.Xaml.Hosting.WindowsXamlManager.InitializeForCurrentThread">
      <summary>在目前執行緒的非 UWP 傳統型應用程式 (例如，WPF 或 Windows Forms 應用程式) 上初始化 UWP XAML 架構。</summary>
      <returns>物件，包含 UWP XAML 架構的參考。</returns>
    </member>
    <member name="T:Windows.UI.Xaml.Hosting.XamlSourceFocusNavigationReason">
      <summary>定義值，代表 Windows.UI.Xaml.UIElement 在傳統型應用程式 (使用 DesktopWindowXamlSource 物件裝載 XAML 型 UI) 中取得焦點的原因。 XamlSourceFocusNavigationRequest.Reason 屬性會傳回其中一個值。</summary>
    </member>
    <member name="F:Windows.UI.Xaml.Hosting.XamlSourceFocusNavigationReason.Down">
      <summary>焦點是為回應使用者採用 4 向瀏覽體驗（例如，透過鍵盤方向鍵）向下瀏覽而設定。</summary>
    </member>
    <member name="F:Windows.UI.Xaml.Hosting.XamlSourceFocusNavigationReason.First">
      <summary>焦點是為回應使用者採用雙向瀏覽體驗（例如，透過按 **Tab**）瀏覽至下一個元素而設定。</summary>
    </member>
    <member name="F:Windows.UI.Xaml.Hosting.XamlSourceFocusNavigationReason.Last">
      <summary>焦點是為回應使用者採用雙向瀏覽體驗（例如，透過按 **Shift-Tab**）瀏覽至上一個元素而設定。</summary>
    </member>
    <member name="F:Windows.UI.Xaml.Hosting.XamlSourceFocusNavigationReason.Left">
      <summary>焦點是為回應使用者採用 4 向瀏覽體驗（例如，透過鍵盤方向鍵）向左瀏覽而設定。</summary>
    </member>
    <member name="F:Windows.UI.Xaml.Hosting.XamlSourceFocusNavigationReason.Programmatic">
      <summary>焦點是以程式設計方式設定。</summary>
    </member>
    <member name="F:Windows.UI.Xaml.Hosting.XamlSourceFocusNavigationReason.Restore">
      <summary>焦點在切換工作後還原，例如按 **Alt** + **Tab**。</summary>
    </member>
    <member name="F:Windows.UI.Xaml.Hosting.XamlSourceFocusNavigationReason.Right">
      <summary>焦點是為回應使用者採用 4 向瀏覽體驗（例如，透過鍵盤方向鍵）向右瀏覽而設定。</summary>
    </member>
    <member name="F:Windows.UI.Xaml.Hosting.XamlSourceFocusNavigationReason.Up">
      <summary>焦點是為回應使用者採用 4 向瀏覽體驗（例如，透過鍵盤方向鍵）向上瀏覽而設定。</summary>
    </member>
    <member name="T:Windows.UI.Xaml.Hosting.XamlSourceFocusNavigationRequest">
      <summary>提供提供焦點給 DesktopWindowXamlSource 物件之要求的相關資訊。</summary>
    </member>
    <member name="M:Windows.UI.Xaml.Hosting.XamlSourceFocusNavigationRequest.#ctor(Windows.UI.Xaml.Hosting.XamlSourceFocusNavigationReason)">
      <summary>初始化 XamlSourceFocusNavigationRequest 類別的新執行個體，包含瀏覽要求的原因。</summary>
      <param name="reason">值，指出瀏覽要求的原因。</param>
    </member>
    <member name="M:Windows.UI.Xaml.Hosting.XamlSourceFocusNavigationRequest.#ctor(Windows.UI.Xaml.Hosting.XamlSourceFocusNavigationReason,Windows.Foundation.Rect)">
      <summary>初始化 XamlSourceFocusNavigationRequest 類別的新執行個體，包含瀏覽要求的原因以及將接收瀏覽焦點的周框矩形。</summary>
      <param name="reason">值，指出瀏覽要求的原因。</param>
      <param name="hintRect">傳統型應用程式中失去焦點之元素（也就是在 DesktopWindowXamlSource 收到焦點之前，具有焦點的元素）的周框矩形。 此參數用來在使用者採用 4 向瀏覽體驗（例如，透過鍵盤方向鍵）輸入 **DesktopWindowXamlSource** 時提供內容給 UWP XAML 架構。 如需詳細資訊，請參閱「備註」。</param>
    </member>
    <member name="M:Windows.UI.Xaml.Hosting.XamlSourceFocusNavigationRequest.#ctor(Windows.UI.Xaml.Hosting.XamlSourceFocusNavigationReason,Windows.Foundation.Rect,System.Guid)">
      <summary>初始化 XamlSourceFocusNavigationRequest 類別的新執行個體，包含瀏覽要求的原因、將接收瀏覽焦點的周框矩形，以及要求的唯一相互關聯識別碼。</summary>
      <param name="reason">值，指出瀏覽要求的原因。</param>
      <param name="hintRect">傳統型應用程式中失去焦點之元素（也就是在 DesktopWindowXamlSource 收到焦點之前，具有焦點的元素）的周框矩形。 此參數用來在使用者採用 4 向瀏覽體驗（例如，透過鍵盤方向鍵）輸入 **DesktopWindowXamlSource** 時提供內容給 UWP XAML 架構。 如需詳細資訊，請參閱「備註」。</param>
      <param name="correlationId">瀏覽要求的唯一識別碼。 您可以將此參數用於記錄目的，或者如果您已從進行中焦點移動取得現有相互關聯識別碼，而且您想將該焦點移動連接至目前的瀏覽要求時也可使用此參數。</param>
    </member>
    <member name="P:Windows.UI.Xaml.Hosting.XamlSourceFocusNavigationRequest.CorrelationId">
      <summary>取得瀏覽要求的唯一識別碼。 您可以將此值用於記錄目的，或者如果您已從進行中焦點移動取得現有相互關聯識別碼，而且您想將該焦點移動連接至新的瀏覽要求時也可使用此值。</summary>
      <returns>瀏覽要求的唯一識別碼。</returns>
    </member>
    <member name="P:Windows.UI.Xaml.Hosting.XamlSourceFocusNavigationRequest.HintRect">
      <summary>取得傳統型應用程式中失去焦點之元素（也就是在 DesktopWindowXamlSource 收到焦點之前，具有焦點的元素）的周框矩形。</summary>
      <returns>失去焦點的周框矩形。</returns>
    </member>
    <member name="P:Windows.UI.Xaml.Hosting.XamlSourceFocusNavigationRequest.Reason">
      <summary>取得 XamlSourceFocusNavigationReason 值，指出瀏覽要求的原因。</summary>
      <returns>值，指出瀏覽要求的原因。</returns>
    </member>
    <member name="T:Windows.UI.Xaml.Hosting.XamlSourceFocusNavigationResult">
      <summary>提供使用 NavigateFocus 方法將焦點導覽至 DesktopWindowXamlSource 物件之要求的資料。</summary>
    </member>
    <member name="M:Windows.UI.Xaml.Hosting.XamlSourceFocusNavigationResult.#ctor(System.Boolean)">
      <summary>初始化 XamlSourceFocusNavigationResult 類別的新執行個體。</summary>
      <param name="focusMoved">如果焦點成功移動到 DesktopWindowXamlSource 物件則為 true，否則為 false。</param>
    </member>
    <member name="P:Windows.UI.Xaml.Hosting.XamlSourceFocusNavigationResult.WasFocusMoved">
      <summary>取得值，指出焦點是否已成功移至 DesktopWindowXamlSource 物件。</summary>
      <returns>如果焦點成功移動到 DesktopWindowXamlSource 物件則為 true，否則為 false。</returns>
    </member>
    <member name="T:Windows.UI.Xaml.Hosting.XamlUIPresenter">
      <summary>可在 Microsoft Direct3D 介面上呈現視覺化樹狀目錄。 這個型別是用於設計工具裝載案例，而不是供一般用途使用。</summary>
    </member>
    <member name="P:Windows.UI.Xaml.Hosting.XamlUIPresenter.CompleteTimelinesAutomatically">
      <summary>取得或設定值，這個值會決定主機是否想要讓時間軸一律執行到結束。</summary>
      <returns>若為 **true**，則一律執行時間軸直到結束。 否則為 **false**。</returns>
    </member>
    <member name="P:Windows.UI.Xaml.Hosting.XamlUIPresenter.RootElement">
      <summary>取得或設定繪製到介面的根視覺項目。</summary>
      <returns>要繪製的項目。</returns>
    </member>
    <member name="P:Windows.UI.Xaml.Hosting.XamlUIPresenter.ThemeKey">
      <summary>取得或設定字串索引鍵，從 ThemeResourcesXaml 中識別要使用的主題集。</summary>
      <returns>字串索引鍵。</returns>
    </member>
    <member name="P:Windows.UI.Xaml.Hosting.XamlUIPresenter.ThemeResourcesXaml">
      <summary>取得或設定指定資源字典的 XAML。 資源字典包含主機應該解析而且應該套用至內容的主題。</summary>
      <returns>以字串形式指定之 XAML 資源字典。</returns>
    </member>
    <member name="M:Windows.UI.Xaml.Hosting.XamlUIPresenter.GetFlyoutPlacement(Windows.Foundation.Rect,Windows.Foundation.Size,Windows.Foundation.Size,Windows.Foundation.Rect,Windows.UI.Xaml.Controls.Primitives.FlyoutPlacementMode,System.Boolean,Windows.UI.Xaml.Controls.Primitives.FlyoutPlacementMode@)">
      <summary>叫用 FlyoutBase 放置邏輯，並使用建議的控制項大小來顯示放置目標及其彈出式視窗。 傳回執行放置邏輯所產生的界限。</summary>
      <param name="placementTargetBounds">放置目標的界限，會傳遞給 FlyoutBase 展示器邏輯。</param>
      <param name="controlSize">顯示彈出式視窗所需的控制項大小。</param>
      <param name="minControlSize">應顯示彈出式視窗之控制項的最小大小。</param>
      <param name="containerRect">應保留放置目標和彈出式視窗的區域界限。</param>
      <param name="targetPreferredPlacement">適用於 FlyoutBase 放置邏輯的放置模式。</param>
      <param name="allowFallbacks">如果後援可用於位置模式，則為 **true**。 若無法使用後援，則為 **false**。</param>
      <param name="chosenPlacement">叫用之 FlyoutBase 放置邏輯所使用的實際放置模式。</param>
      <returns>由 FlyoutBase 放置邏輯計算的界限。</returns>
    </member>
    <member name="M:Windows.UI.Xaml.Hosting.XamlUIPresenter.GetFlyoutPlacementTargetInfo(Windows.UI.Xaml.FrameworkElement,Windows.UI.Xaml.Controls.Primitives.FlyoutPlacementMode,Windows.UI.Xaml.Controls.Primitives.FlyoutPlacementMode@,System.Boolean@)">
      <summary>傳回計算的放置目標界限，其目的是為了同時顯示主機中的彈出式視窗。 其他 **out** 參數提供更多關於如何計算界限的資訊。</summary>
      <param name="placementTarget">相對於放置目標項目來放置 Flyout 的方式。</param>
      <param name="preferredPlacement">列舉的值，宣告 Flyout 相對於目標的主機慣用位置。 </param>
      <param name="targetPreferredPlacement">列舉的值，宣告 Flyout 的慣用位置。</param>
      <param name="allowFallbacks">如果後援位置允許 Flyout 放置邏輯，則為 **true**。 若只考慮 *targetPreferredPlacement* 值，則為 **false**。</param>
      <returns>計算的放置目標界限。</returns>
    </member>
    <member name="M:Windows.UI.Xaml.Hosting.XamlUIPresenter.NotifyWindowSizeChanged">
      <summary>在 Window.Current 上叫用 SizeChanged 事件。 主機用來從主機設定傳播大小變更至使用者程式碼，以便區別設計模式互動與執行階段互動。</summary>
    </member>
    <member name="M:Windows.UI.Xaml.Hosting.XamlUIPresenter.Present">
      <summary>以同步呼叫主機的方式來呈現介面。</summary>
    </member>
    <member name="M:Windows.UI.Xaml.Hosting.XamlUIPresenter.Render">
      <summary>呈現介面。 適用於透過計時器的非同步呼叫。</summary>
    </member>
    <member name="M:Windows.UI.Xaml.Hosting.XamlUIPresenter.SetHost(Windows.UI.Xaml.Hosting.IXamlUIPresenterHost)">
      <summary>指定 IXamlUIPresenterHost 服務實作，以用於應用程式資源解析。</summary>
      <param name="host">服務實作。</param>
    </member>
    <member name="M:Windows.UI.Xaml.Hosting.XamlUIPresenter.SetSize(System.Int32,System.Int32)">
      <summary>指定表面的寬度和高度。</summary>
      <param name="width">寬度，以像素為單位。</param>
      <param name="height">高度，以像素為單位。</param>
    </member>
  </members>
</doc>